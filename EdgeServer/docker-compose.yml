# WARNING: Do not deploy this tutorial configuration directly to a production environment
#
# The tutorial docker-compose files have not been written for production deployment and will not
# scale. A proper architecture has been sacrificed to keep the narrative focused on the learning
# goals, they are just used to deploy everything onto a single Docker machine. All FIWARE components
# are running at full debug and extra ports have been exposed to allow for direct calls to services.
# They also contain various obvious security flaws - passwords in plain text, no load balancing,
# no use of HTTPS and so on.
#
# This is all to avoid the need of multiple machines, generating certificates, encrypting secrets
# and so on, purely so that a single docker-compose file can be read as an example to build on,
# not use directly.
#
# When deploying to a production environment, please looking at the SmartSDK Recipes
# in order to scale up to a proper architecture:
#
# see: https://smartsdk.github.io/smartsdk-recipes/
#
version: "3.5"
services:
  # Orion is the context broker
  orion:
    image: fiware/orion:${ORION_VERSION}
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${ORION_PORT}"
    ports:
      - "${ORION_PORT}:${ORION_PORT}" # localhost:1026
    command: -dbhost mongo-db -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion:${ORION_PORT}/version || exit 1

  # IoT-Agent is configured for the UltraLight Protocol
  #
  # This deliberately fixed to v1.7.0
  # see: https://github.com/telefonicaid/iotagent-ul/issues/320
  #
  # For v1.8 and v1.9 a dummy resource must be added when provisioning
  #

  iot-agent:
    #image: fiware/iotagent-ul:${ULTRALIGHT_VERSION}
    #image: norisjunior/lwpubsub-iotagent:v1.12
    image: norisjunior/lwpubsub-iotagent-ccm:v2.10
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
      - mosquitto
      # - rabbitmq
    networks:
      - default
    expose:
      - "${IOTA_NORTH_PORT}"
    ports:
      - "${IOTA_NORTH_PORT}:${IOTA_NORTH_PORT}" # localhost:4041
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=${ORION_PORT} # port the context broker listens on to update context
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT}
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentul # The name of the database used in mongoDB
      #- IOTA_MQTT_HOST=172.17.0.1 # The host name of the MQTT Broker (localhost)
      #- IOTA_MQTT_HOST=5.196.95.208 # The host name of the MQTT Broker (mosquitto test server)
      #- IOTA_MQTT_HOST=broker.emqx.io # The host name of the MQTT Broker (EMQx - better - do not revoke connection)
      - IOTA_MQTT_HOST=mosquitto
      - IOTA_MQTT_PORT=1883 # The port the MQTT Broker is listening on to receive topics
      # - IOTA_AMQP_HOST=rabbitmq
      # - IOTA_AMQP_PORT=5672 # The port the MQTT Broker is listening on to receive topics
      - IOTA_DEFAULT_RESOURCE= # Default is blank. I'm using MQTT so I don't need a resource
      - IOTA_PROVIDER_URL=http://iot-agent:${IOTA_NORTH_PORT}
      - LWPUBSUB_AESKEY=4e6f726973504144506f6c6955535021 #128-bit key for aes-ccm-8
      #- LWPUBSUB_AESKEY=4e6f726973504144506f6c6955535021 #128-bit key
      #- LWPUBSUB_AESKEY=4e6f7269734a756e696f725041444c5349506f6c69555350 #192-bit key
      #- LWPUBSUB_AESKEY=4e6f7269734a756e696f725041444c5349506f6c697465636e69636155535021 #256-bit key
      #- LWPUBSUB_ALGORITHM=aes-256-cbc
      #- LWPUBSUB_ALGORITHM=aes-256-ctr
    healthcheck:
      test: curl --fail -s http://iot-agent:${IOTA_NORTH_PORT}/iot/about || exit 1

  # Tutorial acts as a series of dummy IoT Sensors over HTTP
  # tutorial:
  #   image: fiware/tutorials.context-provider
  #   hostname: tutorial
  #   container_name: fiware-tutorial
  #   depends_on:
  #     - orion
  #     - iot-agent
  #   networks:
  #     default:
  #       aliases:
  #         - iot-sensors
  #         - context-provider
  #   expose:
  #     - "${TUTORIAL_APP_PORT}"
  #     - "${TUTORIAL_DUMMY_DEVICE_PORT}"
  #   ports:
  #     - "${TUTORIAL_APP_PORT}:${TUTORIAL_APP_PORT}" # localhost:3000
  #     - "${TUTORIAL_DUMMY_DEVICE_PORT}:${TUTORIAL_DUMMY_DEVICE_PORT}" # localhost:3001
  #   environment:
  #     - "DEBUG=tutorial:*"
  #     - "WEB_APP_PORT=${TUTORIAL_APP_PORT}" # Port used by the content provider proxy and web-app for viewing data
  #     - "IOTA_HTTP_HOST=iot-agent"
  #     - "IOTA_HTTP_PORT=${IOTA_SOUTH_PORT}"
  #     - "DUMMY_DEVICES_PORT=${TUTORIAL_DUMMY_DEVICE_PORT}" # Port used by the dummy IOT devices to receive commands
  #     - "DUMMY_DEVICES_TRANSPORT=MQTT" # Default transport used by dummy IoT devices
  #     - "DUMMY_DEVICES_API_KEY=4jggokgpepnvsb2uv4s40d59ov"
  #     - "CONTEXT_BROKER=http://orion:${ORION_PORT}/v2" # URL of the context broker to update context
  #     - "MQTT_BROKER_URL=mqtt://mosquitto"
  #     - "OPENWEATHERMAP_KEY_ID=<ADD_YOUR_KEY_ID>"
  #     - "TWITTER_CONSUMER_KEY=<ADD_YOUR_CONSUMER_KEY>"
  #     - "TWITTER_CONSUMER_SECRET=<ADD_YOUR_CONSUMER_SECRET>"
  #   healthcheck:
  #     test: curl --fail -s http://tutorial:${TUTORIAL_APP_PORT}/version || exit 1

  # Database
  mongo-db:
    image: mongo:${MONGO_DB_VERSION}
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "${MONGO_DB_PORT}"
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}" # localhost:27017
    networks:
      - default
    command: --bind_ip_all --smallfiles
    volumes:
      - mongo-db:/data

  # Other services
  mosquitto:
    image: eclipse-mosquitto:1.5.8
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - default

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   hostname: rabbitmq
  #   container_name: rabbitmq
  #   expose:
  #     - "5672"
  #     - "15672"
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   networks:
  #     - default


networks:
  default:
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  mongo-db: ~
